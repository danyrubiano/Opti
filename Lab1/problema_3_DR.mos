model "Problema Mezclas"
	
uses "mmxprs" ! Llama a Xpress-Optimizer

declarations

PROCESO = 1..2 ! Conjunto de procesos
PRODUCTO = 1..3 ! Conjunto de productos de aguardiente

COSTOS: array(PRODUCTO) of real ! Declaracion de vector de costos de los productos
GRADOS: array(PROCESO) of real ! Declaracion de vector de grados despues de cada proceso

VARIABLES: array(PROCESO,PRODUCTO) of mpvar ! Declaracion de variables de decision 2x3

end-declarations

COSTOS:: [670,720,810] ! Asignacion de valores al vector de costos
GRADOS:: [26,70] ! Asignacion de valores al vector de grados

!-------------------------------------------------------------------------------------------------
! Funcion objetivo 

Return:= sum(s in PROCESO, u in PRODUCTO) VARIABLES(s,u)*COSTOS(u) ! asignada a la variable return


!-------------------------------------------------------------------------------------------------
! Restricciones

! Restriccion de suministro diario
5*(sum(s in PRODUCTO) VARIABLES(1,s)) + 10*(sum(s in PRODUCTO) VARIABLES(2,s)) <= 6700

! Restriccion de capacidad de la segunda unidad
2*(sum(s in PRODUCTO) VARIABLES(2,s)) <= 640

! Restricciones de demanda diaria
sum(s in PROCESO) VARIABLES(s,1) <= 510
sum(s in PROCESO) VARIABLES(s,2) <= 340
sum(s in PROCESO) VARIABLES(s,3) <= 170

! Restricciones de grados de cada producto
sum(s in PROCESO) GRADOS(s)*VARIABLES(s,1) = sum(s in PROCESO) VARIABLES(s,1)*33
sum(s in PROCESO) GRADOS(s)*VARIABLES(s,2) = sum(s in PROCESO) VARIABLES(s,2)*40
sum(s in PROCESO) GRADOS(s)*VARIABLES(s,3) = sum(s in PROCESO) VARIABLES(s,3)*50

! Restriccion de variables continua
forall(s in PROCESO ,u in PRODUCTO) do 
   VARIABLES(s,u) is_continuous
   VARIABLES(s,u) >= 0
end-do

! Resolucion del problema
maximize(Return)

! Impimir solucion
writeln("Total return: ", getobjval)
forall(s in PROCESO,u in PRODUCTO) writeln("X ",s,u, ": ", getsol(VARIABLES(s,u)))
end-model